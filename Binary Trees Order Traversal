PreOrder Traversal Of Binary Tree Using 2 Approaches!

Recursive Method:

class Solution {
public:
    void solve(TreeNode* root,vector<int>&v)
    {
        if(root)
        {
            v.push_back(root->val);
            solve(root->left,v);
            solve(root->right,v);
        }
    }
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int>v;
        solve(root,v);
        return v;
        
    }
};

Iterative Method:


class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int>res;
        if(root==NULL)
            return res;
        stack<TreeNode*>s;
        s.push(root);
        while(!s.empty())
        {
            TreeNode* curr=s.top();
            s.pop();
            res.push_back(curr->val);
            if(curr->right)
                s.push(curr->right);
            if(curr->left)
                s.push(curr->left);
        }
        return res;
        
    }
};
