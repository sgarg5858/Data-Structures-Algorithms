2 Approaches 

1.Recursive

class Solution {
public:
    void inorder(TreeNode* root,vector<int>&res)
    {
        if(root!=NULL)
        {
           
            inorder(root->left,res);
             res.push_back(root->val);
            inorder(root->right,res);
        }
    }
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int>res;
        
        inorder(root,res);
        return res;
    }
};

2.Iterative

class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int>res;
        stack<TreeNode*>s;
        while(root || !s.empty())
        {
            while(root)
            {
                s.push(root);
                root=root->left;
            }
            root=s.top();
            s.pop();
            res.push_back(root->val);
            root=root->right;
        }
        return res;
    }
};
